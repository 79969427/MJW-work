DOM节点
(层次节点、父节点、子节点、兄弟节点、获取所有子节点)
1.元素的获取
（1）getElementById()  利用ID名获取元素
（2）getElementsByTagName() 利用标签名获取元素
（3）getElemetsByClassName() 利用类名获取元素
（4）querySelector() querySelectorAll() 利用选择器获取元素
（5）getElementsByName() 利用name值获取元素

2.获取和设置其他内容
(1)  var div = document.getElementById('mydiv');
      console.log(div.tagName);
      利用ID获取标签名内容
(2)  var div = document.getElementById('mydiv');
        console.log(div.innerHTML);  
        利用ID获取元素内容
    (3)   var div = document.getElementById('mydiv');
       console.log(div.innerText); 
      获取元素文本内容
(4)  获取第一个和最后一个子节点
firstChild、lastChild
(5)  getAttribute（）设置元素属性  setAttribute（）删除元素属性、

    (6)   document.createTextNode('一段文字'css样式赋予

3.节点的属性
       (1)console.log(div.nodeName);
       (2)console.log(div.nodeValue;
        (3)console.log(div.nodeType);


创建元素节点

document.createElement()
创建文本节点

document.createTextNode('一段文字'
css样式赋予

style.cssText
在某元素前,插入创建的新元素.

insertBefore()
删除和替换元素
元素的替换

replaceChild()
删除节点

removeChild()


鼠标移入

会触发冒泡或者说（从内逐级向外依次触发）会触发多次取决于嵌套和鼠标为准

onmouseover

onmouseenter

不会触发多次
鼠标移出

会触发冒泡或者说（从内逐级向外依次触发） 会触发多次取决于嵌套和鼠标为准

onmouseout

onmouseleave

不会触发多次
键盘事件

键盘的按钮按下

- onkeydown

- 
键盘的按钮抬起

- onkeyup
Event事件对象
Event事件对象

键盘案件的状态
鼠标的位置
鼠标按钮
Event事件对象的方式

通过事件触发式的函数以参数的形式传递该函数内
event 对象常用属性

鼠标的坐标值：

e.clientX和e.clientY
键盘的值

e.keyCode
对象事件
页面加载完成后执行事件

window.onload
窗口变化大小时触发事件

indow.onresize
表单事件
获取焦点

onfocus
失去焦点

onblur
用户输入触发

oninput
内容改变时触发

onchange
事件绑定
事件绑定概念

希望运用js让用户操作dom元素，先要让dom元素处理一个事件函数，将这个函数绑定在该dom元素上
事件绑定的方法

子主题 1

<button id="btn2"><tton>
<script>
     var btn1=document.getElementById('btn1');
     var btn2=document.getElementById('btn2');
    //1种
       function a(){
           alert('按钮1')
       }
       //第二种
      btn2.onclick= function a(){
           alert('按钮2')
       }
</script>
解除绑定方法

子主题 1

 <button id="btn2"><tton>
     <script>
     var btn2=document.getElementById('btn2');
      btn2.onclick= function a(){
           alert('按钮2')
       }
      //解除绑定方法
      btn2.onclick=null;
</script>
事件监听
事件监听的方法

方法有三个参数(监听事件,方法,冒泡),冒泡false,监听事件不用加on

监听有兼容性问题,IE的监听需要addEvent('onclick',c)第一个参数为监听的事件,需要加on,第二个参数是触发的事件函数.
解绑和封装

子主题 1

<script>
  var  mydiv=document.getElementById('mydiv')
              //封装监听
    function addE(target,type,fn){
        if(target,addEventListener){
            target.addEventListener(type,fn);
        }else {
            target.attachEvent('on'+type,'fn');
        }
    }
    addE(mydiv,'click',a);
    //封装解绑
    function removeE(target,type,fn){
        if(target,removeEventListener){
            target.removeEventListener(type,fn);
        }else {
            target.datachEvent('on'+type,'fn');
        }
    }
</script>
